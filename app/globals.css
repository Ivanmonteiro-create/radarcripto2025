/* ===============================
   app/globals.css  (Opção B + correções finais)
   =============================== */

/* ---- Tokens ---- */
:root{
  --bg:#0a0f0d;
  --panel:#0f1513;
  --grid:rgba(255,255,255,.06);
  --text:#d5fbe6;
  --muted:#8fbfa8;
  --accent:#21f38d;
  --accent-strong:#1cff80;
}

*{ box-sizing:border-box }
html,body{ height:100% }

body{
  margin:0;
  font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Helvetica, Arial, "Apple Color Emoji","Segoe UI Emoji";
  color:var(--text);
  background-color:var(--bg);
  background-image:
    linear-gradient(to right, var(--grid) 1px, transparent 1px),
    linear-gradient(to bottom, var(--grid) 1px, transparent 1px);
  background-size:60px 60px;
}

/* ===== Layout (home) ===== */
.wrapper{
  display:grid;
  grid-template-columns:300px 1fr 200px;
  gap:16px;
  min-height:100dvh;
  padding:16px;
  align-items:start;
}
@media (max-width:1100px){
  .wrapper{ grid-template-columns:1fr }
  .rightMenu{ position:static }
  .leftPanel{ order:2 }
}

/* Painéis */
.panel{
  position:relative;
  background:radial-gradient(1200px 1200px at -10% -10%, rgba(33,243,141,.06), transparent 40%), var(--panel);
  border:1px solid rgba(255,255,255,.06);
  border-radius:16px;
  padding:14px;
}

/* ===== Tickers (coluna esquerda) ===== */
.tickers{ display:grid; grid-template-columns:1fr; gap:10px }
.tickerCard{
  background:rgba(255,255,255,.02);
  border:1px solid rgba(255,255,255,.06);
  border-radius:12px;
  padding:10px 12px;
}
/* letras um pouco maiores */
.tickerSymbol{ color:var(--text); font-size:14px; letter-spacing:.08em; text-transform:uppercase; font-weight:800 }
.tickerSymbol.strong{ font-size:16px }
.tickerPrice{ font-weight:700; font-size:18px; opacity:.95 }
.tickerPrice.green{ color:var(--accent-strong); filter:drop-shadow(0 0 6px rgba(33,243,141,.25)) }

/* ===== Hero (centro) ===== */
.hero{ height:100%; display:flex; align-items:center; justify-content:center; position:relative; overflow:hidden }
.heroInner{ width:min(940px,95%); text-align:center }
.heroTag{ color:var(--muted); letter-spacing:.15em; font-size:12px; text-transform:uppercase }
.heroTitle{ font-size:clamp(26px,4.5vw,56px); line-height:1.06; margin:8px 0 12px; font-weight:800 }
.heroSubtitle{ color:#c9eedc; opacity:.9; max-width:700px; margin:0 auto 22px }
.liveLineWrap{ position:relative; height:64px; margin:18px auto 4px; width:min(720px,100%) }
.liveLine{ position:absolute; inset:0; border-radius:999px; background:linear-gradient(90deg,transparent,var(--accent),transparent); filter:drop-shadow(0 0 10px var(--accent)); opacity:.8 }
.liveDot{ position:absolute; top:50%; width:10px; height:10px; background:var(--accent-strong); border-radius:999px; transform:translate(-50%,-50%); filter:drop-shadow(0 0 10px var(--accent-strong)); animation:run 2.2s linear infinite }
@keyframes run{ from{left:0%} to{left:100%} }
@media (prefers-reduced-motion:reduce){ .liveDot{ animation:none; left:100% } }

/* ===== Menu direito (home) ===== */
.rightMenu{ position:sticky; top:16px; height:fit-content }
.menuList{ display:grid; gap:8px }
.menuBtn{
  display:block; text-decoration:none; color:var(--text);
  background:rgba(255,255,255,.03);
  border:1px solid rgba(255,255,255,.06);
  padding:10px 12px; border-radius:12px; text-align:center; font-weight:600;
  font-size:14px; /* ↑ maior, como antes */
}
.menuBtn.active{ outline:2px solid var(--accent); box-shadow:0 0 0 4px rgba(33,243,141,.12) inset; color:var(--accent-strong) }

/* Utilidades */
.muted{ color:var(--muted) }
.small{ font-size:12px }

/* =========================================================
   SIMULADOR — ajustes SEM modificar estrutura/JSX
   ========================================================= */

/* (D) Ícone Tela Cheia — MESMA linha da câmera (vence inline) */
.chartFsBtn{
  top:0 !important;                 /* alinha com a barra do TV */
  bottom:auto !important;           /* remove fixação inferior inline */
  right:48px !important;            /* ~1cm ao lado da câmera */
  transform:translateY(2px) !important; /* nivelar com a câmera */
  z-index:6 !important;
  position:absolute !important;
  width:28px; height:28px; line-height:28px;
  border-radius:8px;
  display:grid; place-items:center;
  background:rgba(255,255,255,.12);
  color:#e6e6e6;
  border:1px solid rgba(255,255,255,.25);
  cursor:pointer;
}
.chartFsBtn svg{ display:block; vertical-align:middle }
.chartFsBtn:hover{ background:rgba(255,255,255,.18); color:#fff }

/* Painel compacto (mantido) */
.compactPanel { padding:12px !important }
.compactRoot { font-size:13px }
.compactTitle { font-size:15px; margin:0; font-weight:800 }
.compactHeader { display:flex; align-items:center; justify-content:space-between; margin-bottom:8px }
.compactGrid { display:grid; grid-template-columns:1fr 1fr; gap:10px; height:100% }
.colA,.colB{ display:flex; flex-direction:column; gap:8px; min-width:0 }
.twoCols{ display:grid; grid-template-columns:1fr 1fr; gap:8px }
.threeCols{ display:grid; grid-template-columns:1fr 1fr 1fr; gap:6px }

.lbl{ font-size:12px; color:rgba(255,255,255,.7); margin-bottom:2px }
.xs{ font-size:11px }
.muted.xs{ font-size:11px; color:rgba(255,255,255,.55) }
.green{ color:#1cff80; font-weight:800 }

.inp{
  width:100%; height:34px; padding:0 10px;
  border-radius:10px; background:rgba(255,255,255,.03);
  color:inherit; border:1px solid rgba(255,255,255,.12);
}
.inp-disabled{ background:rgba(255,255,255,.08); cursor:not-allowed }

.btn{ border:1px solid rgba(255,255,255,.18); background:rgba(255,255,255,.06); border-radius:10px; color:inherit; }
.btn:hover{ background:rgba(255,255,255,.12) }
.btn-xs{ padding:7px 9px; font-size:12px; border-radius:10px }
.btn-primary{ background:rgba(33,243,141,.15); border-color:rgba(33,243,141,.35); color:#1cff80; font-weight:800 }
.btnBuy{ background:linear-gradient(180deg, rgba(33,243,141,.22), rgba(33,243,141,.10)); color:#1cff80; border:1px solid rgba(33,243,141,.35); font-weight:800 }
.btnSell{ background:linear-gradient(180deg, rgba(255,76,76,.20), rgba(255,76,76,.08)); color:#ff6b6b; border:1px solid rgba(255,76,76,.35); font-weight:800 }

/* (A) Esconder o PRIMEIRO cabeçalho duplicado (violeta) */
.panel :is(.compactHeader,.controlsHeader,.header):first-of-type{
  display:none !important;
}

/* (B) Forçar “Voltar ao início” VERDE no cabeçalho visível (o ÚLTIMO) */
.panel :is(.compactHeader,.controlsHeader,.header):last-of-type .btn{
  background:linear-gradient(180deg, rgba(33,243,141,.22), rgba(33,243,141,.10)) !important;
  border-color:rgba(33,243,141,.35) !important;
  color:var(--accent-strong) !important;
  box-shadow:0 0 0 2px rgba(33,243,141,.15) inset !important;
  font-size:14px !important;
  padding:12px 18px !important;
}

/* (C) Remover “Histórico” do meio; manter só o ÚLTIMO do painel */
.panel :is(.historyCard,.histWrap,.history-inline,.histInline):not(:last-of-type){
  display:none !important;
}

/* Histórico final (mantido) */
.historyCard{ flex:1; min-height:0; display:flex; flex-direction:column }
.histWrap.fill{ flex:1; min-height:0; overflow-y:auto; display:grid; gap:6px; padding-right:4px }
.histRow{ border:1px solid rgba(255,255,255,.10); border-radius:10px; padding:6px 8px; background:rgba(255,255,255,.03) }
/* ======= PATCH: alinhamento do botão Tela Cheia + esconder Histórico duplicado ======= */

/* Alinhar o ícone de Tela Cheia com a câmera (mesma linha, ~1cm à esquerda) */
section.panel > button[aria-label="Tela cheia"],
.panel .chartFsBtn{
  position: absolute !important;
  /* a barra do TradingView fica a 0px do topo do chart; o ícone de câmera costuma
     renderizar com ~6px de offset vertical. Usamos 6px para nivelar. */
  top: 6px !important;
  bottom: auto !important;
  right: 44px !important;   /* ~1cm em muitos laptops */
  transform: translateY(0) !important;
  z-index: 6 !important;
  width: 28px; height: 28px; line-height: 28px;
  border-radius: 8px;
  display: grid; place-items: center;
  background: rgba(255,255,255,.12);
  color: #e6e6e6;
  border: 1px solid rgba(255,255,255,.25);
  cursor: pointer;
}
section.panel > button[aria-label="Tela cheia"]:hover,
.panel .chartFsBtn:hover{ background: rgba(255,255,255,.18); color:#fff }

/* Esconder o HISTÓRICO “do meio”, manter só o último do painel */
.panel .history-inline,
.panel .histInline,
.panel .historyCard-inline,
.panel .histWrap:not(:last-of-type),
.panel .cardMini.history,
.panel .cardMini.is-history {
  display: none !important;
}

/* Fallback genérico: se o “Histórico” do meio for um cardMini na primeira coluna,
   esconda somente o PRIMEIRO card de histórico que aparecer antes do rodapé. */
.compactGrid .colA .cardMini:nth-of-type(1){ display: none !important; }

/* Mantém o Histórico final (rodapé) visível */
.panel .histWrap:last-of-type,
.panel .historyCard:last-of-type{ display: block !important; }
/* ======= FIX: restaurar cards TP/SL + esconder APENAS Histórico do meio ======= */

/* (1) GARANTE que todos os cards normais voltem a aparecer */
.compactGrid .colA .cardMini,
.compactGrid .colB .cardMini { display: flex !important; }

/* (2) ESCONDE SOMENTE o “Histórico” do meio (variações de classe comuns) */
.panel .history-inline,
.panel .histInline,
.panel .historyCard-inline,
.panel .cardMini.history,
.panel .cardMini.is-history {
  display: none !important;
}

/* (remover fallback antigo: não esconder “o 1º card” genérico) */
.compactGrid .colA .cardMini:nth-of-type(1) { display: flex !important; }

/* Mantém o Histórico final (rodapé) visível */
.panel .histWrap:last-of-type,
.panel .historyCard:last-of-type { display: block !important; }

/* ======= FIX: alinhar botão de Tela Cheia exatamente na linha da câmera ======= */
section.panel > button[aria-label="Tela cheia"],
.panel .chartFsBtn{
  position: absolute !important;
  top: 8px !important;       /* ajuste fino para nivelar com o ícone da câmera */
  bottom: auto !important;
  right: 44px !important;    /* ~1 cm à esquerda da câmera em notebooks comuns */
  transform: translateY(0) !important;
  z-index: 6 !important;
  width: 28px; height: 28px; line-height: 28px;
  border-radius: 8px;
  display: grid; place-items: center;
  background: rgba(255,255,255,.12);
  color: #e6e6e6;
  border: 1px solid rgba(255,255,255,.25);
  cursor: pointer;
}
section.panel > button[aria-label="Tela cheia"]:hover,
.panel .chartFsBtn:hover{ background: rgba(255,255,255,.18); color:#fff }
/* === 1) Remover o "Histórico" do meio (classe real .histRow) === */
/* Oculta histRow que aparece dentro da grade compacta do painel */
.panel .compactGrid .histRow,
.panel .colA .histRow,
.panel .colB .histRow {
  display: none !important;
}

/* Garante que o histórico do rodapé (dentro de .histWrap) continue visível */
.panel .histWrap .histRow { 
  display: block !important;
}

/* === 2) Alinhar o botão de Tela Cheia com a câmera === */
button.chartFsBtn,
section.panel > button[aria-label="Tela cheia"] {
  position: absolute !important;
  top: 8px !important;        /* ajuste fino: mesma linha da câmera em notebooks */
  bottom: auto !important;    /* anula o inline "bottom:0" */
  right: 44px !important;     /* ~1 cm à esquerda da câmera */
  transform: translateY(0) !important;
  z-index: 6 !important;

  /* mantém o visual atual */
  width: 28px; height: 28px; border-radius: 8px;
  display: grid; place-items: center;
  background: rgba(255,255,255,.12);
  color: #e6e6e6;
  border: 1px solid rgba(255,255,255,.25);
  cursor: pointer;
}
button.chartFsBtn:hover,
section.panel > button[aria-label="Tela cheia"]:hover {
  background: rgba(255,255,255,.18); color: #fff;
}

/* Pequeno ajuste responsivo (se ficar 1px fora em telas maiores/menores) */
@media (max-height: 780px) {
  button.chartFsBtn,
  section.panel > button[aria-label="Tela cheia"] { top: 7px !important; }
}
@media (min-height: 950px) {
  button.chartFsBtn,
  section.panel > button[aria-label="Tela cheia"] { top: 9px !important; }
}
/* ===== PATCH-04 (alinhamento do FS + remoção do histórico duplicado) ===== */

/* 1) Botão de Tela Cheia: forçar alinhamento na MESMA LINHA da câmera
      Observação: há um inline style vindo do componente (bottom: 0; right: 56px).
      Por isso, usamos !important para sobrepor SEM alterar JS. */
.chartFsBtn{
  position: absolute !important;
  top: 6px !important;          /* mesma linha da barra (nível da câmera) */
  right: 44px !important;       /* ~1cm de distância da câmera, sem encostar */
  bottom: auto !important;      /* anula bottom inline */
  transform: translateY(0) !important;
  z-index: 6 !important;        /* garante que fique acima do chart */
}

/* 2) Remover APENAS o “Histórico” que ficou no meio do painel.
      O histórico “oficial” (o de baixo) permanece. */
.compactGrid .colA .histRow,
.compactGrid .colA .histWrap,
.compactGrid .colA .historyCard,
.compactGrid .colA .histCard{
  display: none !important;
}
/* ===== HOTFIX — NÃO MUDAR A ESTRUTURA, APENAS AJUSTES VISUAIS ===== */

/* 1) Botão de tela cheia: força alinhar ao lado da câmera, na MESMA LINHA */
section.panel button[aria-label="Tela cheia"] {
  position: absolute !important;
  top: 6px !important;           /* mesma linha da câmera */
  right: 44px !important;        /* ~1 cm da câmera, ajuste fino se quiser */
  bottom: auto !important;       /* neutraliza inline bottom */
  transform: none !important;
  z-index: 6;                    /* fica acima do canvas do TV */
}

/* 2) Histórico duplicado do MEIO: esconde apenas o da coluna de entradas,
      preservando o histórico final (o de baixo) */
section.panel .compactGrid .histRow { 
  display: none !important;      /* some o “histórico” que fica no miolo */
}
section.panel .historyCard .histRow {
  display: block !important;     /* garante o histórico de baixo visível */
}

/* (Opcional, só para garantir) – cabeçalho verde do “Voltar ao início” */
section.panel .btn-primary {
  background: linear-gradient(180deg, rgba(33,243,141,.22), rgba(33,243,141,.10)) !important;
  color: #1cff80 !important;
  border-color: rgba(33,243,141,.35) !important;
}
